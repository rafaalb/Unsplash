{"version":3,"file":"static/webpack/static/development/pages/index.js.434f911dfb2a68774636.hot-update.js","sources":["webpack:///./components/Items.js"],"sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components';\nimport { connect } from 'react-redux'; \nimport Item from './Item';\nimport { fetchItems, addItems, fetchUsers } from '../redux/actions';\nimport _size from 'lodash/size';\nimport Loading from './Loading';\nimport Button from '@material-ui/core/Button';\nimport SearchBar from './SearchBar'\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\n\nconst Span = styled.span`\n  font-family: 'Gotham Rounded';\n`;\n\nconst ItemsList = styled.div`\n  display: grid;\n  grid-gap: 40px;\n  margin: 0 auto;\n  grid-template-columns: 1fr 1fr;\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst UserInfo = styled.div`\n  text-align: left;\n  margin-bottom: 30px;\n  h3 {\n    color: white;\n  }\n`;\n\nconst options = [\n  'Carlos',\n  'Mary',\n  'Miguel',\n  'Emily',\n  'Rafael',\n  'Andres'\n]\n\nconst Suggest = ({ classes, onEnterPress, search }) => {\n  return (\n    <>\n      <h4>\n        Start searching for amazing photos\n      </h4>\n      <SearchBar\n        onEnterPress={onEnterPress}\n        toggleError={() => {}}\n      />\n      <h6>or you can check any of these</h6>\n      {options.map(option =>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          style={{ margin: 5 }}\n          onClick={() => search(option)}\n        >\n            <Span>{option}</Span>\n        </Button>\n      )}\n    </>\n  )\n}\n\nclass Items extends Component {\n  componentDidMount() {\n    this.props.fetchItems();\n  }\n  _renderItems = () => {\n    const { selected } = this.props.users\n    if (!_size(selected.photos)) return;\n    return selected.photos.map((item, i) => (\n      <Item item={item} key={`${item.id}_${i}`} />\n    ));\n  }\n  _onEnterPress = (payload) => {\n    return this.props.fetchUsers(payload);\n  }\n  render() {\n    const { items, users } = this.props;\n    if (items.searching) return <Loading />;\n    if (users.firstLoad) return (\n      <Suggest onEnterPress={this._onEnterPress} search={this.props.fetchUsers} />\n    )\n    return (\n      <Center>\n        <UserInfo>\n          <h3>{this.props.users.selected.name}</h3>\n          <em>{this.props.users.selected.bio}</em>\n        </UserInfo>\n        <ItemsList>\n          {this._renderItems()}\n        </ItemsList>\n      </Center>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUsers: (payload) => dispatch(fetchUsers(payload)),\n    fetchItems: (payload) => dispatch(fetchItems(payload))\n  }\n}\n\nexport default connect(state => state, mapDispatchToProps)(Items);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAQA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;AAIA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AACA;AACA;AACA;;;;;;AAbA;AACA;AACA;;;AAWA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA/BA;AACA;AAgCA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;;;;A","sourceRoot":""}