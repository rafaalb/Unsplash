{"version":3,"file":"static/webpack/static/development/pages/index.js.8dfc87e39ae99536747d.hot-update.js","sources":["webpack:///./components/Drawer.js","webpack:///./components/Main.js","webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Typography from '@material-ui/core/Typography';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FilterIcon from '@material-ui/icons/FilterList';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport UserList from './UserList';\nimport DrawerUI from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport { connect } from 'react-redux';\nimport SearchBar from './SearchBar';\nimport { fetchUsers } from './../redux/actions'\nimport withSizes from 'react-sizes'\nimport { withStyles } from '@material-ui/core';\nconst drawerWidth = 280;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#18171c'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    marginTop: 50,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\n\nclass Drawer extends Component {\n  state = {\n    expandedAge: true,\n    isMobile: false,\n    error: false\n  }\n  _onEnterPress = (payload) => {\n    return this.props.fetchUsers(payload);\n  }\n  // componentDidMount() {\n  //   if (this.props.isMobile) {\n  //     this.setState({ open: false });\n  //   }\n  // }\n\n  handleDrawerClose = () => {\n    this.props.handleDrawerClose()\n  }\n  handleDrawerOpen = () => {\n    this.props.handleDrawerOpen()\n  }\n  render() {\n    const { classes, theme } = this.props;\n    return (\n      <DrawerUI\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={this.props.isOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n\n        <div className={classes.drawerHeader}>\n          <SearchBar\n            onEnterPress={this._onEnterPress}\n            toggleError={(error) => this.setState({ error })}\n          />\n        </div>\n        <List>\n          <ExpansionPanel\n            expanded={this.state.expandedAge}\n            onChange={() => this.setState({ expandedAge: !this.state.expandedAge })}\n            style={{ boxShadow: 'none', backgroundColor: 'transparent' }}\n          >\n            <ExpansionPanelSummary style={{ paddingLeft: 0 }} expandIcon={<ExpandMoreIcon color={'secondary'}/>}>\n              <ListItem>\n                <ListItemIcon>\n                  <FilterIcon color={'secondary'}/>\n                </ListItemIcon>\n                <ListItemText\n                  primary={\n                    <Typography\n                      type=\"body2\"\n                      style={{ color: '#FFFFFF', fontFamily: 'Gotham Rounded' }}\n                    >\n                      List of Users\n                    </Typography>\n                  }\n                />\n              </ListItem>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails style={{ flexDirection: 'column' }}>\n              {this.state.error ? <p>No results found</p> : <UserList onSelect={this.props.onSelect} />}\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n          <Divider />\n        </List>\n        <div style={{ color: 'red' }}></div>\n      </DrawerUI>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchUsers: (payload) => dispatch(fetchUsers(payload))\n  }\n}\n\nconst mapSizesToProps = ({ width }) => ({\n  isMobile: width < 600,\n})\n\nconst StyledDrawer = withStyles(styles, { withTheme: true })(Drawer)\nconst withSize = withSizes(mapSizesToProps)(StyledDrawer)\nexport default connect(null, mapDispatchToProps)(withSize)","import React, { Component } from 'react'\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from './AppBar';\nimport Drawer from './Drawer';\nimport Items from './Items';\nimport { sortByName, filterByAge } from '../redux/actions';\nimport { connect } from 'react-redux';\n\n\nconst drawerWidth = 280;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#18171c'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    marginTop: 50,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: true,\n      expandedAge: false\n    }\n  }\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n  onClickSort = (property, order) => {\n    const { dispatch } = this.props;\n    dispatch(sortByName(property, order));\n  }\n  onClickFilter = (min, max) => {\n    const { dispatch } = this.props;\n    dispatch(filterByAge(min, max));\n  }\n  render() {\n    const { classes } = this.props;\n    const { open } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          isOpen={open}\n          handleDrawerOpen={this.handleDrawerOpen}\n          handleDrawerClose={this.handleDrawerClose}\n          onOpen={() => this.setState({ open: !this.state.open })}\n        />\n        <Drawer\n          isOpen={this.state.open}\n          onSelect={() => this.setState({ open: false })}\n        />\n        <main\n          className={classNames(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n          <Items />\n        </main>\n      </div>\n    );\n  }\n}\n\nconst StyledMain = withStyles(styles, { withTheme: true })(Main);\nexport default connect()(StyledMain);\nexport { drawerWidth };","import React, { Component } from 'react';\nimport styled, { ThemeProvider, injectGlobal } from 'styled-components';\nimport Meta from '../components/Meta';\nimport Main from '../components/Main';\nimport { connect } from 'react-redux';\n\nconst styled_theme = {\n  red: '#ef0061',\n  yellow: '#fff210',\n  green: '#00ff8d',\n  mainblue: '#32ceff',\n  black: '#393939',\n  blue: 'red',\n  lightBlue: '#8b9dc3',\n  lighterBlue: '#dfe3ee',\n  grey: '#3A3A3A',\n  lightgrey: '#E1E1E1',\n  offWhite: '#EDEDED',\n  maxWidth: '1000px',\n  bs: '0 12px 24px 0 rgba(0, 0, 0, 0.09)',\n};\n\nconst StyledPage = styled.div`\n  background: black;\n  color: ${props => props.theme.black};\n`;\n\nconst Inner = styled.div`\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n  padding: 2rem;\n`;\n\ninjectGlobal`\n  @import url(//db.onlinewebfonts.com/c/ae8f19f441b335c3fda30febf5069c5a?family=Gotham+Rounded);\n  @font-face {\n    font-family: 'radnika_next';\n    src: url('/static/radnikanext-medium-webfont.woff2') format('woff2');\n    font-weight: normal;\n    font-style: normal;\n  }\n  @font-face {font-family: \"Gotham Rounded\";\n    src: url(\"//db.onlinewebfonts.com/t/ae8f19f441b335c3fda30febf5069c5a.eot\");\n    src: url(\"//db.onlinewebfonts.com/t/ae8f19f441b335c3fda30febf5069c5a.eot?#iefix\") format(\"embedded-opentype\"),\n    url(\"//db.onlinewebfonts.com/t/ae8f19f441b335c3fda30febf5069c5a.woff2\") format(\"woff2\"),\n    url(\"//db.onlinewebfonts.com/t/ae8f19f441b335c3fda30febf5069c5a.woff\") format(\"woff\"),\n    url(\"//db.onlinewebfonts.com/t/ae8f19f441b335c3fda30febf5069c5a.ttf\") format(\"truetype\"),\n    url(\"//db.onlinewebfonts.com/t/ae8f19f441b335c3fda30febf5069c5a.svg#Gotham Rounded\") format(\"svg\");\n  }\n  html {\n    box-sizing: border-box;\n    font-size: 15px;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n  body {\n    padding: 0;\n    margin: 0;\n    font-size: 1.5rem;\n    line-height: 2;\n    background-color: black!important;\n    height: 100%;\n    font-family: \"Gotham Rounded\", Helvetica, Arial, serif;\n  }\n  a {\n    text-decoration: none;\n    color: ${styled_theme.black};\n  }\n  button {  font-family: 'radnika_next'; }\n`;\n\nclass Index extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={styled_theme}>\n        <StyledPage>\n          <Meta />\n          <Main />\n        </StyledPage>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default connect()(Index);"],"mappings":"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","sourceRoot":""}